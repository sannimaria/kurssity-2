[{"C:\\Users\\Käyttäjä\\hello-world\\src\\index.js":"1","C:\\Users\\Käyttäjä\\hello-world\\src\\App.js":"2","C:\\Users\\Käyttäjä\\hello-world\\src\\Details.js":"3","C:\\Users\\Käyttäjä\\hello-world\\src\\Weather.js":"4"},{"size":234,"mtime":1613933834012,"results":"5","hashOfConfig":"6"},{"size":739,"mtime":1614017734193,"results":"7","hashOfConfig":"6"},{"size":309,"mtime":1613932329575,"results":"8","hashOfConfig":"6"},{"size":1472,"mtime":1614019030812,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1bbywom",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},"C:\\Users\\Käyttäjä\\hello-world\\src\\index.js",[],["22","23"],"C:\\Users\\Käyttäjä\\hello-world\\src\\App.js",[],"C:\\Users\\Käyttäjä\\hello-world\\src\\Details.js",["24","25"],"import React from 'react'\r\n\r\nexport default function Details(props) {\r\n    return (\r\n        <div>\r\n            <h3>{props.title}</h3>\r\n            <img src={props.image}></img>\r\n            <p>{props.description}</p>\r\n            <a href=\"#\" onClick={props.close}>Back to news</a>\r\n        </div>\r\n    )\r\n}\r\n",["26","27"],"C:\\Users\\Käyttäjä\\hello-world\\src\\Weather.js",["28","29"],"import React,{useState, useEffect} from 'react'\r\n\r\nconst API_URL = 'https://api.openweathermap.org/data/2.5/weather?';\r\nconst ICON_URL = 'http://openweathermap.org/img/wn/';\r\nconst API_KEY = 'tyhjennetty';\r\n\r\nexport default function Weather({lat, lng}) {\r\n    const [temp, setTemp] = useState(0);\r\n    const [speed, setSpeed] = useState(0);\r\n    const [direction, setDirection] = useState(0);\r\n    const [description, setDescription] = useState('');\r\n    const [icon, setIcon] = useState('');\r\n\r\n    useEffect(() => {\r\n      const url = API_URL + \r\n      'lat=' + lat +\r\n      '&lon=' + lng +\r\n      '%units=metric' +\r\n      '&appid=' + API_KEY;\r\n\r\n      fetch(url)\r\n      .then(res => res.json())\r\n      .then (\r\n          (result) => {\r\n         if (result.main != undefined) {\r\n             setTemp(result.main.temp);\r\n             setSpeed(result.wind.speed);\r\n             setDirection(result.wind.deg);\r\n             setDescription(result.weather[0].description);\r\n             setIcon(ICON_URL + result.weather[0].icon + '@2x.png');\r\n         } \r\n         else {\r\n             alert('Could not read weather information!')\r\n         }\r\n          },(error) => {\r\n              alert(error);\r\n          }\r\n      )\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n        <h3>Weather on your location</h3>\r\n        <p>{temp} C&#176;</p>\r\n        <p>{speed} m/s {direction} degrees</p>\r\n        <p>{description}</p>\r\n        <img src={icon} alt=\"\"/>\r\n        </>\r\n    )\r\n    \r\n}",{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":7,"column":13,"nodeType":"36","endLine":7,"endColumn":36},{"ruleId":"37","severity":1,"message":"38","line":9,"column":13,"nodeType":"36","endLine":9,"endColumn":47},{"ruleId":"30","replacedBy":"39"},{"ruleId":"32","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":25,"column":26,"nodeType":"43","messageId":"44","endLine":25,"endColumn":28},{"ruleId":"45","severity":1,"message":"46","line":39,"column":8,"nodeType":"47","endLine":39,"endColumn":10,"suggestions":"48"},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["49"],["50"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'lat' and 'lng'. Either include them or remove the dependency array.","ArrayExpression",["51"],"no-global-assign","no-unsafe-negation",{"desc":"52","fix":"53"},"Update the dependencies array to be: [lat, lng]",{"range":"54","text":"55"},[1226,1228],"[lat, lng]"]